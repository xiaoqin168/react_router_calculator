/**
 * 本文件将 /rules/base/style.js 中 error 的规则都降级成 warn 级别
 */

const path = require('path');
const fs = require('fs');
const CLIEngine = require('eslint').CLIEngine;

const appDirectory = fs.realpathSync(process.cwd());

// 将传入 config 中 erro 级别规则都改为 warn 级别
function setErrorRulesToWarn(configPath) {
  const cli = new CLIEngine({
    configFile: path.resolve(__dirname, configPath),
    useEslintrc: false
  });
  const config = cli.getConfigForFile(appDirectory);
  const rules = config.rules;

  for (const ruleName in rules) {
    if (Object.prototype.hasOwnProperty.call(rules, ruleName)) {
      const ruleValue = rules[ruleName];
      if (Array.isArray(ruleValue)) {
        // 'array-bracket-spacing': [ 'error', 'never' ] 这种规则写法
        if (ruleValue[0] === 'error') {
          ruleValue[0] = 'warn';
        }
      } else if (ruleValue === 'error') {
        // 'new-parens': 'error' 这种规则写法
        rules[ruleName] = 'warn';
      }
    }
  }

  return config;
}

module.exports = setErrorRulesToWarn('../../rules/base/style.js');
